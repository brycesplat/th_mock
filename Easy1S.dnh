#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Boss Easy Spell 1"]
#Text["Code by brycesplat[r]Pistol Style \"Ricochet\""]
//#BGM["./namofbgm.mp3"] //Background Music

#include "./img/shot/ZUNShot_Const.txt"
#include "./lib/animation.dnh"
#include "./lib/selibrary.txt"
#include "./lib/Cutin.dnh"

let objBoss;
let objScene = GetEnemyBossSceneObjectID();
let gunLocation = ObjEnemy_Create(OBJ_ENEMY);
let blank = GetCurrentScriptDirectory~"./img/blank.png";

@Event{
	alternative(GetEventType())
    case(EV_REQUEST_LIFE)
    {
        SetScriptResult(300);
    }
    case(EV_REQUEST_TIMER)
    {
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE)
    {
        SetScriptResult(1000000);
    }
}

@Initialize{
	objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjEnemy_Regist(gunLocation);

    ObjEnemyBossScene_StartSpell(objScene);

    ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 60, 60);
    ObjCutin_SetSpellcardS4("Pistol Style \"Ricochet\"", blank, NAZRIN, 104, 104, 240);
    ObjCutin_LaunchS3(NAZRIN, blank, "Normal");
    behaviorBoss(GetCommonData("ARM_STAND", 0));

    TDrawLoop;
    TFinalize;
    MainTask;
}

@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss,ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),32);
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss,ObjMove_GetX(objBoss),ObjMove_GetY(objBoss),24);

    yield;
}

task MainTask{
    ObjEnemy_SetDamageRate(objBoss, 0, 0);

    setAction(GetCommonData("SPELL", 0), 100);

    wait(110);

    ObjEnemy_SetDamageRate(objBoss, 15, 15);

    setAction(GetCommonData("PULL", 0), 0);

    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
        wait(30);

        fire;
        wait(160);

        setAction(GetCommonData("RELOAD", 0), 30);
        wait(30);

        wait(10);
    }
}

function wait(n){loop(n){yield;}}

task movement{
    setAction(GetCommonData("MOVE", 0), 60);
    ObjMove_SetDestAtFrame(objBoss, rand(GetCenterX() + 90, GetCenterX() - 90), rand(GetCenterY() - 60, GetCenterY() - 120), 60);
}

task movementGun{
    setAction(GetCommonData("GUN_MOVE", 0), 60);
    ObjMove_SetDestAtFrame(objBoss, rand(GetCenterX() + 90, GetCenterX() - 90), rand(GetCenterY() - 60, GetCenterY() - 120), 60);
}

function GetCenterX(){
    return GetStgFrameWidth() / 2;
}

function GetCenterY(){
	return GetStgFrameHeight() / 2;
}

function rand_int(min, max){
  return round(rand(min, max))
}

task TDrawLoop{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
        drawBoss(objBoss);
        yield;
    }
}

task TFinalize{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){yield;}
    if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT) + ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE))
    }

    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}

function getGunX(){
    return ObjMove_GetX(objBoss) - 7;
}

function getGunY(){
    return ObjMove_GetY(objBoss) - 12;
}

task fire{
    resetGun();
    let speed = 3;

    setAction(GetCommonData("FIRE", 0), 4);
    wait(3);
    ascent (i in -1..2) {
        let angleT = GetAngleToPlayer(gunLocation) + (rand(-3, 3));
        let xSpeed = speed * cos(angleT + (i * 15));
        let ySpeed = speed * sin(angleT + (i * 15));
        SE_Play(shot2, 50);
        let objBullet = CreateShotB1(getGunX(), getGunY(), xSpeed, ySpeed, 186, 1);
        reflect(objBullet, xSpeed, ySpeed);
    }

    wait(10);

    movementGun;
    wait(60);

    resetGun();

    setAction(GetCommonData("FIRE", 0), 4);
    wait(3);
    ascent (i in -1..3) {
        let angleT = GetAngleToPlayer(gunLocation) - 5 + (rand(-3, 3));
        let xSpeed = speed * cos(angleT + (i * 10));
        let ySpeed = speed * sin(angleT + (i * 10));
        SE_Play(shot2, 50);
        let objBullet = CreateShotB1(getGunX(), getGunY(), xSpeed, ySpeed, 186, 1);
        reflect(objBullet, xSpeed, ySpeed);
    }

    wait(10);

    movementGun;
    wait(60);

    resetGun();

    setAction(GetCommonData("FIRE", 0), 4);
    wait(3);
    ascent (i in -2..3) {
        let angleT = GetAngleToPlayer(gunLocation) + (rand(-3, 3));
        let xSpeed = speed * cos(angleT + (i * 15));
        let ySpeed = speed * sin(angleT + (i * 15));
        SE_Play(shot2, 50);
        let objBullet = CreateShotB1(getGunX(), getGunY(), xSpeed, ySpeed, 186, 1);
        reflect(objBullet, xSpeed, ySpeed);
    }
}

task reflect(bullet, x, y){
    let i = 0;
    let xSpeed = x;
    let ySpeed = y;
    while(i < 4){
        if (ObjMove_GetX(bullet) <= 0 || ObjMove_GetX(bullet) >= GetStgFrameWidth()) {
            xSpeed *= -1;
            SE_Play(chime1, 15);
            ObjMove_AddPatternB1(bullet, 0, xSpeed, NO_CHANGE);
            i++;
        } else if(ObjMove_GetY(bullet) <= 0 || ObjMove_GetY(bullet) >= GetStgFrameHeight()){
            ySpeed *= -1;
            SE_Play(chime1, 15);
            ObjMove_AddPatternB1(bullet, 0, NO_CHANGE, ySpeed);
            i++;
        }
        yield;
    }
}

function resetGun() {
    ObjMove_SetX(gunLocation, getGunX());
    ObjMove_SetY(gunLocation, getGunY());
}